\documentclass{article}
\usepackage{listings}             % Include the listings-package
\usepackage[usenames,dvipsnames,svgnames,table]{xcolor}
\usepackage{graphicx}
\usepackage{hyperref}
\usepackage{amsmath}
\usepackage{csquotes}
\definecolor{mygreen}{rgb}{0,0.6,0}
\definecolor{mygray}{rgb}{0.5,0.5,0.5}
\definecolor{mymauve}{rgb}{0.58,0,0.82}

\newcommand{\SmartVersion}{1A}
    
\title{Unreal Engine and UnrealTournament}
\author{The\_Cowboy}
\pagestyle{headings}
\begin{document}
\maketitle
\lstset{language=Java}          % Set your language (you can change the language for each code-block optionally)
\section{Introduction}

\lstset{ %
  backgroundcolor=\color{white},   % choose the background color; you must add \usepackage{color} or    %\usepackage{xcolor}
  basicstyle=\footnotesize,        % the size of the fonts that are used for the code
  breakatwhitespace=false,         % sets if automatic breaks should only happen at whitespace
  breaklines=true,                 % sets automatic line breaking
  captionpos=b,                    % sets the caption-position to bottom
  commentstyle=\color{mygreen},    % comment style
  deletekeywords={...},            % if you want to delete keywords from the given language
  escapeinside={\%*}{*)},          % if you want to add LaTeX within your code
  extendedchars=true,              % lets you use non-ASCII characters; for 8-bits encodings only, %does not work with UTF-8
  frame=single,                    % adds a frame around the code
  keepspaces=true,                 % keeps spaces in text, useful for keeping indentation of code %(possibly needs columns=flexible)
  keywordstyle=\color{blue},       % keyword style
  language=Java,                 % the language of the code
  morekeywords={*,...},            % if you want to add more keywords to the set
  numbers=left,                    % where to put the line-numbers; possible values are (none, left, %right)
  numbersep=5pt,                   % how far the line-numbers are from the code
  numberstyle=\tiny\color{mygray}, % the style that is used for the line-numbers
  rulecolor=\color{black},         % if not set, the frame-color may be changed on line-breaks within %not-black text (e.g. comments (green here))
  showspaces=false,                % show spaces everywhere adding particular underscores; it %overrides 'showstringspaces'
  showstringspaces=false,          % underline spaces within strings only
  showtabs=false,                  % show tabs within strings adding particular underscores
  stepnumber=2,                    % the step between two line-numbers. If it's 1, each line will be %numbered
  stringstyle=\color{mymauve},     % string literal style
  tabsize=2,                       % sets default tabsize to 2 spaces
  title=\lstname                   % show the filename of files included with \lstinputlisting; also %try caption instead of title
} %optionally)

These are the notes concerning the Unreal Engine and UnrealTournament that I took while building UnrealTournament 4 on Linux.  I will be documenting the ``unspoken'' code and my modifications to bring 3 giants (the third is of course Linux!) together in harmony and ``Greater Good'' of the community.  I will assume that
\begin{itemize}
\item you have a decent knowledge about coding (no PHP, Python and JavaScript don't count) in Java or C++.
\item you are quite comfortable with Linux terminal and bash scripting.  
\item anything else I missed.
\end{itemize}


\section{UnrealBuildTool}
The UnrealBuildTool or UBT is an \href{https://dotnet.microsoft.com/}{{\color{Blue}.NET}} application which has two-fold functionality
\begin{itemize}
\item generate the project files for IDEs which include Qt Creator and KDevelop (both are multiplatform supported) and take care of all the relevant dependencies (including the ``circular dependencies'') in the game project.
\item compile the C++ source files into binary files (as per the platform needs). {\color{Red}Add more information about the platform dependent compilation}
\end{itemize}

The code for the UBT is present in the {\ttfamily Engine/Source/Programs/UnrealBuildTool } directory.  The cross platform IDE \href{https://www.monodevelop.com/}{\color{Blue}MonoDevelop} can be used to load the UBT project and modify the tool ``as per the need''.  Then you can either build the project from the IDE or go about the Epic's way (I prefer the latter).

In order to do that make sure that xbuild and \href{https://www.mono-project.com/}{{\color{Blue}Mono}} are appropriately setup on the box.  Then the command
\lstset{language=bash} 
\begin{lstlisting}[frame=single]
  xbuild Engine/Source/Programs/UnrealBuildTool/UnrealBuildTool.csproj /property:Configuration="Development" /verbosity:quiet /nologo
\end{lstlisting}
will yield the executale file (.exe) in the {\ttfamily Engine/Binaries/DotNET} directory.  There you have your ``manipulated'' UBT!

Don't get upset by the .exe extension (Linux users tend to get agitated by the name), the Mono\footnote{The words ``Cross Platform'' and ``Open Source'' should restore the peace!} framework will generate the appropriate environment for UBT to work.  The real-time building can be performed by the command
\lstset{language=bash} 
\begin{lstlisting}[frame=single]
 mono Engine/Binaries/DotNET/UnrealBuildTool.exe UE4Game Linux Debug
\end{lstlisting}

\end{document}